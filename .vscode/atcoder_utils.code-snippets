{
	// Place your AtCoder ワークスペース snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
		"mapint": {
		"prefix": "mapint",
		"body": [
			"map(int, input().split())",
		],
		"description": "for integers"
		},

		"listint": {
			"prefix": "listint",
			"body": [
				"list(map(int, input().split()))",
		],
		"description": "for integer list"
		},

		"intinput": {
			"prefix": "intinput",
			"body": [
				"int(input())",
		],
		"description": "for integer list"
		},

		"graph": {
			"prefix": "adjacent graph",
			"body": [
				"graph = [[] for _ in range(N)]",
		],
		"description": "for graph"
		},

		"i2j2": {
			"prefix": "four_way",
			"body": [
				"for i2, j2 in [[i+1, j], [i-1, j], [i, j+1], [i, j-1]]:\n    if 0 <= i2 < H and 0 <= j2 < W:",
		],
		"description": "for gird search"
		},

		"mod1": {
			"prefix": "mod1",
			"body": [
				"mod = 10**9+7",
		],
		"description": "mod"
		},

		"gridinput": {
			"prefix": "gridinput",
			"body": [
				"H, W = map(int, input().split())\ngrid = [list(input()) for _ in range(H)]",
		],
		"description": "input grid"
		},

		"graph_input": {
			"prefix": "graph_input",
			"body": [
				"N, M = map(int, input().split())\ngraph = [[] for _ in range(N)]\nfor _ in range(M):\n    a, b = map(int, input().split())\n    graph[a-1].append(b-1)\n    graph[b-1].append(a-1)",
		],
		"description": "for graph input"
		},
}
